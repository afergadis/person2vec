from person2vec.generators import training_data_generator
from person2vec import data_handler
import numpy as np

data_gen = training_data_generator.EmbeddingDataGenerator(300, 4)
handler = data_handler.DataHandler()

hello_vec = [
    -0.05419922, 0.01708984, -0.00527954, 0.33203125, -0.25, -0.01397705,
    -0.15039062, -0.265625, 0.01647949, 0.3828125, -0.03295898, -0.09716797,
    -0.16308594, -0.04443359, 0.00946045, 0.18457031, 0.03637695, 0.16601562,
    0.36328125, -0.25585938, 0.375, 0.171875, 0.21386719, -0.19921875,
    0.13085938, -0.07275391, -0.02819824, 0.11621094, 0.15332031, 0.09082031,
    0.06787109, -0.0300293, -0.16894531, -0.20800781, -0.03710938, -0.22753906,
    0.26367188, 0.012146, 0.18359375, 0.31054688, -0.10791016, -0.19140625,
    0.21582031, 0.13183594, -0.03515625, 0.18554688, -0.30859375, 0.04785156,
    -0.10986328, 0.14355469, -0.43554688, -0.0378418, 0.10839844, 0.140625,
    -0.10595703, 0.26171875, -0.17089844, 0.39453125, 0.12597656, -0.27734375,
    -0.28125, 0.14746094, -0.20996094, 0.02355957, 0.18457031, 0.00445557,
    -0.27929688, -0.03637695, -0.29296875, 0.19628906, 0.20703125, 0.2890625,
    -0.20507812, 0.06787109, -0.43164062, -0.10986328, -0.2578125, -0.02331543,
    0.11328125, 0.23144531, -0.04418945, 0.10839844, -0.2890625, -0.09521484,
    -0.10351562, -0.0324707, 0.07763672, -0.13378906, 0.22949219, 0.06298828,
    0.08349609, 0.02929688, -0.11474609, 0.00534058, -0.12988281, 0.02514648,
    0.08789062, 0.24511719, -0.11474609, -0.296875, -0.59375, -0.29492188,
    -0.13378906, 0.27734375, -0.04174805, 0.11621094, 0.28320312, 0.00241089,
    0.13867188, -0.00683594, -0.30078125, 0.16210938, 0.01171875, -0.13867188,
    0.48828125, 0.02880859, 0.02416992, 0.04736328, 0.05859375, -0.23828125,
    0.02758789, 0.05981445, -0.03857422, 0.06933594, 0.14941406, -0.10888672,
    -0.07324219, 0.08789062, 0.27148438, 0.06591797, -0.37890625, -0.26171875,
    -0.13183594, 0.09570312, -0.3125, 0.10205078, 0.03063965, 0.23632812,
    0.00582886, 0.27734375, 0.20507812, -0.17871094, -0.31445312, -0.01586914,
    0.13964844, 0.13574219, 0.0390625, -0.29296875, 0.234375, -0.33984375,
    -0.11816406, 0.10644531, -0.18457031, -0.02099609, 0.02563477, 0.25390625,
    0.07275391, 0.13574219, -0.00138092, -0.2578125, -0.2890625, 0.10107422,
    0.19238281, -0.04882812, 0.27929688, -0.3359375, -0.07373047, 0.01879883,
    -0.10986328, -0.04614258, 0.15722656, 0.06689453, -0.03417969, 0.16308594,
    0.08642578, 0.44726562, 0.02026367, -0.01977539, 0.07958984, 0.17773438,
    -0.04370117, -0.00952148, 0.16503906, 0.17285156, 0.23144531, -0.04272461,
    0.02355957, 0.18359375, -0.41601562, -0.01745605, 0.16796875, 0.04736328,
    0.14257812, 0.08496094, 0.33984375, 0.1484375, -0.34375, -0.14160156,
    -0.06835938, -0.14648438, -0.02844238, 0.07421875, -0.07666016, 0.12695312,
    0.05859375, -0.07568359, -0.03344727, 0.23632812, -0.16308594, 0.16503906,
    0.1484375, -0.2421875, -0.3515625, -0.30664062, 0.00491333, 0.17675781,
    0.46289062, 0.14257812, -0.25, -0.25976562, 0.04370117, 0.34960938,
    0.05957031, 0.07617188, -0.02868652, -0.09667969, -0.01281738, 0.05859375,
    -0.22949219, -0.1953125, -0.12207031, 0.20117188, -0.42382812, 0.06005859,
    0.50390625, 0.20898438, 0.11230469, -0.06054688, 0.33203125, 0.07421875,
    -0.05786133, 0.11083984, -0.06494141, 0.05639648, 0.01757812, 0.08398438,
    0.13769531, 0.2578125, 0.16796875, -0.16894531, 0.01794434, 0.16015625,
    0.26171875, 0.31640625, -0.24804688, 0.05371094, -0.0859375, 0.17089844,
    -0.39453125, -0.00156403, -0.07324219, -0.04614258, -0.16210938,
    -0.15722656, 0.21289062, -0.15820312, 0.04394531, 0.28515625, 0.01196289,
    -0.26953125, -0.04370117, 0.37109375, 0.04663086, -0.19726562, 0.3046875,
    -0.36523438, -0.23632812, 0.08056641, -0.04248047, -0.14648438,
    -0.06225586, -0.0534668, -0.05664062, 0.18945312, 0.37109375, -0.22070312,
    0.04638672, 0.02612305, -0.11474609, 0.265625, -0.02453613, 0.11083984,
    -0.02514648, -0.12060547, 0.05297852, 0.07128906, 0.00063705, -0.36523438,
    -0.13769531, -0.12890625
]


def test_create_entity_dict_size():
    entity_dict = data_gen._create_entity_dict(handler)
    assert len(entity_dict) == handler.entity_count()


def test_create_entity_dict_position():
    entity_dict = data_gen._create_entity_dict(handler)
    assert entity_dict['Barack Obama'] == 0


def test_vectorize_text():
    vectors = data_gen._vectorize_text("hello salksjdflkajasd")
    # values get truncated by this function, so need to show that it's in a small range of a certain value
    assert vectors[0][1] > 0.01708984 and vectors[0][
        1] < 0.01708985 and vectors[1][1] == 0
